module.exports = {
	'env': {
		'es2021': true,
		'node': true,
	},
	'parser': '@typescript-eslint/parser',
	'parserOptions': {
		'project': [ './tsconfig.json', './examples/tsconfig.json' ],
		'sourceType': 'module',
	},
	'plugins': [ '@typescript-eslint' ],
	'rules': {
		'@typescript-eslint/adjacent-overload-signatures': 'error',
		'@typescript-eslint/array-type': [ 'error', { 'default': 'generic', 'readonly': 'generic' } ],
		'@typescript-eslint/await-thenable': 'error',
		'@typescript-eslint/ban-ts-comment': 'error',
		'@typescript-eslint/brace-style': [ 'error', '1tbs', { 'allowSingleLine': true } ],
		'@typescript-eslint/class-literal-property-style': [ 'error', 'fields' ],
		'@typescript-eslint/consistent-indexed-object-style': [ 'error', 'record' ],
		'@typescript-eslint/consistent-type-assertions': [ 'error', { 'assertionStyle': 'as', 'objectLiteralTypeAssertions': 'never' } ],
		'@typescript-eslint/consistent-type-definitions': [ 'error', 'interface' ],
		'@typescript-eslint/consistent-type-imports': [ 'error', { 'disallowTypeAnnotations': true, 'prefer': 'type-imports' } ],
		'@typescript-eslint/dot-notation': [
			'error',
			{
				'allowPrivateClassPropertyAccess': true,
				'allowProtectedClassPropertyAccess': true,
			},
		],
		'@typescript-eslint/explicit-function-return-type': [ 'error', { 'allowHigherOrderFunctions': true } ],
		'@typescript-eslint/explicit-member-accessibility': [ 'error', { 'overrides': { 'constructors': 'off' } } ],
		'@typescript-eslint/member-delimiter-style': [ 'error', { 'multiline': { 'delimiter': 'none' }, 'singleline': { 'requireLast': true } } ],
		'@typescript-eslint/member-ordering': [
			'error',
			{
				'default':
				{
					'memberTypes': [
						'private-instance-field',
						'private-abstract-field',
						'protected-instance-field',
						'protected-abstract-field',
						'public-instance-field',
						'public-abstract-field',
						'public-constructor',
						'private-static-field',
						'protected-static-field',
						'public-static-field',
						'private-static-method',
						'protected-static-method',
						'public-static-method',
						'private-instance-method',
						'protected-instance-method',
						'public-instance-method',
						'private-abstract-method',
						'protected-abstract-method',
						'public-abstract-method',
					],
					'order': 'alphabetically',
				},
			},
		],
		'@typescript-eslint/method-signature-style': 'error',
		'@typescript-eslint/naming-convention': [
			'error',
			{
				'selector': 'variableLike',
				'format': [ 'strictCamelCase', 'UPPER_CASE' ],
				'leadingUnderscore': 'allow',
			},
			{
				'selector': 'memberLike',
				'format': [ 'strictCamelCase' ],
				'leadingUnderscore': 'allow',
			},
			{
				'selector': 'typeLike',
				'format': [ 'StrictPascalCase' ],
			},
			{
				'selector': 'enum',
				'format': [ 'StrictPascalCase', 'UPPER_CASE' ],
			},
			{
				'selector': 'enumMember',
				'format': [ 'StrictPascalCase', 'UPPER_CASE' ],
			},
			{
				'selector': 'property',
				'format': [ 'strictCamelCase', 'UPPER_CASE' ],
				'leadingUnderscore': 'allow',
			},
			{
				'selector': 'method',
				'format': [ 'strictCamelCase' ],
				'leadingUnderscore': 'allow',
			},
		],
		'@typescript-eslint/no-base-to-string': 'error',
		'@typescript-eslint/no-confusing-void-expression': 'error',
		'@typescript-eslint/no-duplicate-imports': 'error',
		'@typescript-eslint/no-explicit-any': [ 'error', { 'ignoreRestArgs': true } ],
		'@typescript-eslint/no-extra-non-null-assertion': 'error',
		'@typescript-eslint/no-extra-parens': 'error',
		'@typescript-eslint/no-extraneous-class': 'error',
		// eslint-disable-next-line @typescript-eslint/naming-convention
		'@typescript-eslint/no-floating-promises': [ 'error', { 'ignoreIIFE': true } ],
		'@typescript-eslint/no-for-in-array': 'error',
		'@typescript-eslint/no-inferrable-types': 'error',
		'@typescript-eslint/no-invalid-void-type': 'error',
		'@typescript-eslint/no-misused-new': 'error',
		'@typescript-eslint/no-misused-promises': [ 'error', { 'checksVoidReturn': false } ],
		'@typescript-eslint/no-namespace': 'error',
		'@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
		'@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
		'@typescript-eslint/no-parameter-properties': 'error',
		'@typescript-eslint/no-shadow': [ 'error', { 'ignoreFunctionTypeParameterNameValueShadow': true } ],
		'@typescript-eslint/no-this-alias': [ 'error', { 'allowedNames': [ 'that' ] } ],
		'@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
		'@typescript-eslint/no-unnecessary-type-arguments': 'error',
		'@typescript-eslint/no-unnecessary-type-assertion': 'error',
		'@typescript-eslint/no-unnecessary-type-constraint': 'error',
		'@typescript-eslint/no-unsafe-argument': 'error',
		'@typescript-eslint/no-unsafe-assignment': 'error',
		'@typescript-eslint/no-unsafe-call': 'error',
		'@typescript-eslint/no-unsafe-member-access': 'error',
		'@typescript-eslint/no-unsafe-return': 'error',
		'@typescript-eslint/no-use-before-define': 'error',
		'@typescript-eslint/no-var-requires': 'error',
		'@typescript-eslint/prefer-for-of': 'error',
		'@typescript-eslint/prefer-includes': 'error',
		'@typescript-eslint/prefer-literal-enum-member': 'error',
		'@typescript-eslint/prefer-nullish-coalescing': 'error',
		'@typescript-eslint/prefer-optional-chain': 'error',
		'@typescript-eslint/prefer-reduce-type-parameter': 'error',
		'@typescript-eslint/prefer-return-this-type': 'error',
		'@typescript-eslint/prefer-string-starts-ends-with': 'error',
		'@typescript-eslint/require-array-sort-compare': 'error',
		'@typescript-eslint/restrict-plus-operands': [ 'error', { 'checkCompoundAssignments': true } ],
		'@typescript-eslint/strict-boolean-expressions': 'error',
		'@typescript-eslint/type-annotation-spacing': 'error',
		'@typescript-eslint/unbound-method': 'error',
		'@typescript-eslint/unified-signatures': 'error',
		'array-bracket-newline': [ 'error', 'consistent' ],
		'array-bracket-spacing': [ 'error', 'always' ],
		'array-callback-return': 'error',
		'array-element-newline': [ 'error', 'consistent', { 'multiline': true } ],
		'arrow-body-style': [ 'error', 'as-needed' ],
		'arrow-parens': [ 'error', 'as-needed' ],
		'arrow-spacing': [ 'error', { 'before': true, 'after': true } ],
		'block-spacing': [ 'error', 'always' ],
		'camelcase': 'error',
		'comma-dangle': [
			'error',
			{
				'arrays': 'always-multiline',
				'functions': 'always-multiline',
				'imports': 'always-multiline',
				'objects': 'always-multiline',
			},
		],
		'comma-spacing': 'error',
		'comma-style': 'error',
		'computed-property-spacing': 'error',
		'curly': 'error',
		'dot-location': [ 'error', 'property' ],
		'eol-last': 'error',
		'eqeqeq': 'error',
		'func-call-spacing': 'error',
		'func-name-matching': [ 'error', 'always', { 'considerPropertyDescriptor': true } ],
		'func-style': 'error',
		'function-call-argument-newline': [ 'error', 'consistent' ],
		'function-paren-newline': [ 'error', 'consistent' ],
		'getter-return': 'error',
		'grouped-accessor-pairs': [ 'error', 'getBeforeSet' ],
		// eslint-disable-next-line @typescript-eslint/naming-convention
		'indent': [ 'error', 'tab', { 'SwitchCase': 1 } ],
		'key-spacing': 'error',
		'keyword-spacing': 'error',
		'line-comment-position': [ 'error', { 'ignorePattern': '#', 'position': 'beside' } ],
		'lines-between-class-members': [ 'error', 'never' ],
		'multiline-comment-style': [ 'error', 'starred-block' ],
		'new-cap': 'error',
		'new-parens': 'error',
		'newline-per-chained-call': 'error',
		'no-array-constructor': 'error',
		'no-async-promise-executor': 'error',
		'no-bitwise': 'error',
		'no-caller': 'error',
		'no-case-declarations': 'error',
		'no-class-assign': 'error',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': 'error',
		'no-constant-condition': 'error',
		'no-constructor-return': 'error',
		'no-continue': 'error',
		'no-debugger': 'error',
		'no-delete-var': 'error',
		'no-dupe-args': 'error',
		'no-dupe-else-if': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-empty': 'error',
		'no-empty-character-class': 'error',
		'no-empty-function': [ 'error', { 'allow': [ 'arrowFunctions' ] } ],
		'no-empty-pattern': 'error',
		'no-eval': 'error',
		'no-ex-assign': 'error',
		'no-extend-native': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-semi': 'error',
		'no-fallthrough': 'error',
		'no-func-assign': 'error',
		'no-global-assign': 'error',
		'no-implicit-coercion': 'error',
		'no-implicit-globals': 'error',
		'no-implied-eval': 'error',
		'no-import-assign': 'error',
		'no-inner-declarations': 'error',
		'no-invalid-regexp': 'error',
		'no-irregular-whitespace': 'error',
		'no-iterator': 'error',
		'no-labels': 'error',
		'no-lone-blocks': 'error',
		'no-lonely-if': 'error',
		'no-loop-func': 'error',
		'no-loss-of-precision': 'error',
		'no-mixed-operators': 'error',
		'no-mixed-spaces-and-tabs': [ 'error', 'smart-tabs' ],
		'no-multi-assign': 'error',
		'no-multi-spaces': 'error',
		'no-multi-str': 'error',
		'no-multiple-empty-lines': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-object': 'error',
		'no-new-symbol': 'error',
		'no-new-wrappers': 'error',
		'no-obj-calls': 'error',
		'no-octal': 'error',
		'no-param-reassign': 'error',
		'no-plusplus': [ 'error', { 'allowForLoopAfterthoughts': true } ],
		'no-promise-executor-return': 'error',
		'no-proto': 'error',
		'no-regex-spaces': 'error',
		'no-restricted-syntax': [ 'error', 'SequenceExpression' ],
		'no-return-assign': [ 'error', 'always' ],
		'no-self-assign': 'error',
		'no-self-compare': 'error',
		'no-setter-return': 'error',
		'no-shadow-restricted-names': 'error',
		'no-sparse-arrays': 'error',
		'no-tabs': [ 'error', { 'allowIndentationTabs': true } ],
		'no-template-curly-in-string': 'error',
		'no-throw-literal': 'error',
		'no-trailing-spaces': 'error',
		'no-undef': [ 'error', { 'typeof': true } ],
		'no-undef-init': 'error',
		'no-unexpected-multiline': 'error',
		'no-unmodified-loop-condition': 'error',
		'no-unneeded-ternary': 'error',
		'no-unreachable': 'error',
		'no-unreachable-loop': 'error',
		'no-unsafe-negation': [ 'error', { 'enforceForOrderingRelations': true } ],
		'no-unsafe-optional-chaining': [ 'error', { 'disallowArithmeticOperators': true } ],
		'no-unused-expressions': 'error',
		'no-use-before-define': 'error',
		'no-useless-backreference': 'error',
		'no-useless-computed-key': [ 'error', { 'enforceForClassMembers': true } ],
		'no-useless-concat': 'error',
		'no-useless-constructor': 'error',
		'no-useless-escape': 'error',
		'no-var': 'error',
		'no-void': 'error',
		'no-whitespace-before-property': 'error',
		'no-with': 'error',
		'object-curly-newline': 'error',
		'object-curly-spacing': [ 'error', 'always' ],
		'object-property-newline': [ 'error', { 'allowAllPropertiesOnSameLine': true } ],
		'object-shorthand': [ 'error', 'properties' ],
		'one-var': [ 'error', 'never' ],
		'operator-assignment': 'error',
		'operator-linebreak': [ 'error', 'before', { 'overrides': { '=': 'after' } } ],
		'padded-blocks': [ 'error', 'never' ],
		'padding-line-between-statements': 'error',
		'prefer-arrow-callback': 'error',
		'prefer-const': 'error',
		'prefer-destructuring': 'error',
		'prefer-exponentiation-operator': 'error',
		'prefer-numeric-literals': 'error',
		'prefer-promise-reject-errors': 'error',
		'prefer-rest-params': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		'quote-props': [ 'error', 'as-needed', { 'keywords': false, 'unnecessary': false } ],
		'quotes': [ 'error', 'single', { 'avoidEscape': false } ],
		'radix': 'error',
		'require-atomic-updates': 'error',
		'rest-spread-spacing': 'error',
		'semi': [ 'error', 'never', { 'beforeStatementContinuationChars': 'always' } ],
		'semi-spacing': 'error',
		'semi-style': [ 'error', 'first' ],
		'sort-imports': [ 'error', { 'ignoreDeclarationSort': true } ],
		'space-before-blocks': 'error',
		'space-before-function-paren': [ 'error', { 'anonymous': 'never', 'named': 'never', 'asyncArrow': 'always' } ],
		'space-in-parens': 'error',
		'space-infix-ops': 'error',
		'space-unary-ops': [ 'error', { 'words': true, 'nonwords': false } ],
		'spaced-comment': 'error',
		'symbol-description': 'error',
		'switch-colon-spacing': 'error',
		'template-curly-spacing': 'error',
		'use-isnan': 'error',
		'valid-typeof': 'error',
		'wrap-iife': [ 'error', 'inside' ],
		'yoda': [ 'error', 'never', { 'exceptRange': true } ],
	},
}
